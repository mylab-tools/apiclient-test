<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MyLab.ApiClient.Test</name>
    </assembly>
    <members>
        <member name="T:MyLab.ApiClient.Test.ApiClientTest`2">
            <summary>
            Contains base functional for test with API client
            </summary>
        </member>
        <member name="P:MyLab.ApiClient.Test.ApiClientTest`2.Output">
            <summary>
            Gets test output
            </summary>
        </member>
        <member name="M:MyLab.ApiClient.Test.ApiClientTest`2.#ctor(Xunit.Abstractions.ITestOutputHelper)">
            <summary>
            Initializes a new instance of <see cref="T:MyLab.ApiClient.Test.ApiClientTest`2"/>
            </summary>
        </member>
        <member name="M:MyLab.ApiClient.Test.ApiClientTest`2.Dispose">
            <inheritdoc />
        </member>
        <member name="M:MyLab.ApiClient.Test.ApiClientTest`2.TestCall(System.Linq.Expressions.Expression{System.Func{`1,System.Threading.Tasks.Task}},System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection},System.Action{System.Net.Http.HttpClient})">
            <summary>
            Performs server method calling
            </summary>
        </member>
        <member name="M:MyLab.ApiClient.Test.ApiClientTest`2.TestCall``1(System.Linq.Expressions.Expression{System.Func{`1,System.Threading.Tasks.Task{``0}}},System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection},System.Action{System.Net.Http.HttpClient})">
            <summary>
            Performs server method calling
            </summary>
        </member>
        <member name="M:MyLab.ApiClient.Test.ApiClientTest`2.OverrideServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Override to specify common services for all tests in test class
            </summary>
        </member>
        <member name="M:MyLab.ApiClient.Test.ApiClientTest`2.HttpClientPostInit(System.Net.Http.HttpClient)">
            <summary>
            Override to tune <see cref="T:System.Net.Http.HttpClient"/> for all tests in test class
            </summary>
        </member>
        <member name="T:MyLab.ApiClient.Test.CallDetailsExtensions">
            <summary>
            Provides extension methods for <see cref="T:MyLab.ApiClient.CallDetails`1"/> and <see cref="T:MyLab.ApiClient.Test.TestCallDetails`1"/>
            </summary>
        </member>
        <member name="M:MyLab.ApiClient.Test.CallDetailsExtensions.ToTestDump``1(MyLab.ApiClient.CallDetails{``0},System.Type)">
            <summary>
            Gets web-call dump for test output 
            </summary>
            <typeparam name="TRes">call result</typeparam>
            <param name="call">web call</param>
            <param name="contractType">API contract</param>
            <returns>string dump</returns>
        </member>
        <member name="M:MyLab.ApiClient.Test.CallDetailsExtensions.ToTestDump``2(MyLab.ApiClient.CallDetails{``0})">
            <summary>
            Gets web-call dump for test output 
            </summary>
            <typeparam name="TRes">call result</typeparam>
            <typeparam name="TContract">API contract</typeparam>
            <param name="call">web call</param>
            <returns>string dump</returns>
        </member>
        <member name="M:MyLab.ApiClient.Test.CallDetailsExtensions.ToTestDump``2(MyLab.ApiClient.Test.TestCallDetails{``0})">
            <summary>
            Gets web-call dump for test output 
            </summary>
            <typeparam name="TRes">call result</typeparam>
            <typeparam name="TContract">API contract</typeparam>
            <param name="call">web call</param>
            <returns>string dump</returns>
        </member>
        <member name="M:MyLab.ApiClient.Test.CallDetailsExtensions.ToTestDump``1(MyLab.ApiClient.Test.TestCallDetails{``0},System.Type)">
            <summary>
            Gets web-call dump for test output 
            </summary>
            <typeparam name="TRes">call result</typeparam>
            <param name="contractType">API contract</param>
            <param name="call">web call</param>
            <returns>string dump</returns>
        </member>
        <member name="T:MyLab.ApiClient.Test.TestApi`2">
            <summary>
            Represent test api application instance
            </summary>
        </member>
        <member name="P:MyLab.ApiClient.Test.TestApi`2.ServiceOverrider">
            <summary>
            Overrides services for
            </summary>
        </member>
        <member name="P:MyLab.ApiClient.Test.TestApi`2.HttpClientTuner">
            <summary>
            Additional tunes <see cref="T:System.Net.Http.HttpClient"/>
            </summary>
        </member>
        <member name="P:MyLab.ApiClient.Test.TestApi`2.Output">
            <summary>
            Test output for log writing
            </summary>
        </member>
        <member name="M:MyLab.ApiClient.Test.TestApi`2.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:MyLab.ApiClient.Test.TestApi`2"/>
            </summary>
        </member>
        <member name="M:MyLab.ApiClient.Test.TestApi`2.Start(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection},System.Action{System.Net.Http.HttpClient})">
            <summary>
            Starts test API instance and returns <see cref="T:MyLab.ApiClient.ApiClient`1"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MyLab.ApiClient.Test.TestApi`2.Start(System.Net.Http.HttpClient@,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection},System.Action{System.Net.Http.HttpClient})">
            <summary>
            Starts test API instance and returns <see cref="T:MyLab.ApiClient.ApiClient`1"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:MyLab.ApiClient.Test.TestApiClient`1">
            <summary>
            Provides wrapped test API calls 
            </summary>
            <typeparam name="TApiContact">API contract</typeparam>
        </member>
        <member name="P:MyLab.ApiClient.Test.TestApiClient`1.Output">
            <summary>
            Test output for log writing
            </summary>
        </member>
        <member name="M:MyLab.ApiClient.Test.TestApiClient`1.#ctor(MyLab.ApiClient.ApiClient{`0})">
            <summary>
            Initializes a new instance of <see cref="T:MyLab.ApiClient.Test.TestApiClient`1"/>
            </summary>
        </member>
        <member name="M:MyLab.ApiClient.Test.TestApiClient`1.Call(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task}})">
            <summary>
            Performs server method calling
            </summary>
        </member>
        <member name="M:MyLab.ApiClient.Test.TestApiClient`1.Call``1(System.Linq.Expressions.Expression{System.Func{`0,System.Threading.Tasks.Task{``0}}})">
            <summary>
            Performs server method calling
            </summary>
        </member>
        <member name="T:MyLab.ApiClient.Test.TestCallDetails`1">
            <summary>
            Contains details about request and response
            </summary>
            <typeparam name="TRes">result object type</typeparam>
        </member>
        <member name="P:MyLab.ApiClient.Test.TestCallDetails`1.ResponseProcessingError">
            <summary>
            Determines that there was processing result error
            </summary>
        </member>
        <member name="P:MyLab.ApiClient.Test.TestCallDetails`1.ProcessingError">
            <summary>
            Gets response processing exception
            </summary>
        </member>
        <member name="M:MyLab.ApiClient.Test.TestCallDetails`1.#ctor(MyLab.ApiClient.CallDetails{`0})">
            <summary>
            Initializes a new instance of <see cref="T:MyLab.ApiClient.Test.TestCallDetails`1"/>
            </summary>
        </member>
    </members>
</doc>
